#!/usr/bin/ruby
#require "fileutils"
require 'yaml'
require ::File.expand_path("../../lib/generators/generator_model_controller.rb", __FILE__)
require ::File.expand_path("../../lib/generators/generate_app_directory.rb", __FILE__)
require ::File.expand_path("../../lib/webit.rb", __FILE__)
module CreateApplication

  def self.error_msg(keys)
    path_error_yml = File.expand_path("../../lib/webit/error.yml", __FILE__)
    config_error = YAML.load_file("#{path_error_yml}")
    keys.split(".").inject(config_error) { |config_error, key| config_error[key] }
  end

  def self.identify_commandline_arguement
    constant = ["model","controller"]
    if ARGV[0].eql? "new"
      if ARGV[1].eql? "app"
        if ARGV[2].nil?
          puts "Application Name is missing\n USAGE - webit new app APP_NAME\n"
        else
          GenerateAppDirectory.generate ARGV[2]
          app_name = ARGV[2]
        end
      else
        puts "Application Name not specified\n USAGE - webit new app APP_NAME\n"
      end

    elsif ARGV[0] == "generate" || ARGV[0] == "g"
      if ARGV[1].nil?
        puts CreateApplication.error_msg("error.model_control_error")
      end
      type = ARGV[1].downcase

      if constant.include?(type)

        if type.eql? ("model")
          if ARGV[2].nil?
            puts CreateApplication.error_msg("error.model_error")
          else
            Generator.generating_model_controller ARGV
          end
        end

        if type.eql? ("controller")
          if ARGV[2].nil?
            puts CreateApplication.error_msg("error.controller_error")
          else
            Generator.generating_model_controller ARGV
          end
        end
      elsif ARGV[0] == "start"
        if Dir.pwd.split("/").last == app_name
          `rackup config.ru`
        else
          puts "Please visit to root directory of Application to start!"
        end
      else
        puts CreateApplication.error_msg("error.model_control_error")
      end

    elsif ARGV[0] == "start" && (ARGV[1] == "server" || ARGV[1] == 's')
      require_relative "../config.ru"
    else
      puts "Welcome to your Application"
    end
  end
end

CreateApplication.identify_commandline_arguement