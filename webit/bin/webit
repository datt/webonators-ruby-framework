#!/usr/bin/ruby
#require "fileutils"
require 'yaml'
require ::File.expand_path("../../lib/generators/generator_model_controller.rb", __FILE__)
require ::File.expand_path("../../lib/generators/generate_app_directory.rb", __FILE__)
require ::File.expand_path("../../lib/webit.rb", __FILE__)
module CreateApplication

  def self.display_error
     path_error_yml = File.expand_path("../../lib/webit/error.yml", __FILE__)
    if File.file? "#{path_error_yml}"
      @config_error = YAML.load_file("#{path_error_yml}")
      @config_error = @config_error['error']
    end
  end

  def self.identify_commandline_arguement
    if ARGV[0].eql? "new"
      if ARGV[1].eql? "app"
        if ARGV[2].nil?
          puts "Application Name is missing\n USAGE - webit new app APP_NAME\n"
        else
          GenerateAppDirectory.generate ARGV[2]
          app_name = ARGV[2]
        end
      else
        puts "Application Name not specified\n USAGE - webit new app APP_NAME\n"
      end

    elsif ARGV[0] == "generate" || ARGV[0] == "g"
      if ARGV[1] == "model" || ARGV[1] == "controller" ||  ARGV[1] == "Model" || ARGV[1] == "Controller"

        if (ARGV[1] == "model" || ARGV[1] == "Model")
          if ARGV[2].nil?
            puts @config_error['model_error']['show_error']
            puts @config_error['model_error']['usage']
          else
            Generator.generating_model_controller ARGV
          end
        end
        if (ARGV[1] == "controller" || ARGV[1] == "Controller")
          if ARGV[2].nil?
            puts @config_error['controller_error']['show_error']
            puts @config_error['controller_error']['usage']
          else
            Generator.generating_model_controller ARGV
          end
        end
      elsif ARGV[0] == "start"
        if Dir.pwd.split("/").last == app_name
          `rackup config.ru`
        else
          puts "Please visit to root directory of Application to start!"
        end
      else
        puts @config_error['model_control_error']['show_error']
        puts @config_error['model_error']['usage']
        puts @config_error['controller_error']['usage']
      end

    elsif ARGV[0] == "start" && (ARGV[1] == "server" || ARGV[1] == 's')
      require_relative "../config.ru"
    else
      puts "Welcome to your Application"
    end
  end

end
CreateApplication.display_error
CreateApplication.identify_commandline_arguement